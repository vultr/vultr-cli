builds:
  -
    env:
      - CGO_ENABLED=0

    binary: vultr-cli

    flags:
      - -trimpath #removes all file system paths from the compiled executable

    goos:
      - linux
      - windows
      - darwin

    goarch:
      - amd64
      - arm64
      - arm

    goarm:
      - 6
      - 7

archives:
  -
    name_template: >-
      {{- .ProjectName }}_v
      {{- .Version }}_
      {{- if eq .Os "darwin" }}macOs
      {{- else }}{{ .Os }}{{ end }}_
      {{- if eq .Arch "arm" }}arm32-v{{ .Arm }}
      {{- else }}{{ .Arch }}{{ end }}

    format: tar.gz

    files:
      - none*

    format_overrides:
      - goos: windows
        format: zip

checksum:
  name_template: "{{ .ProjectName }}_v{{ .Version }}_checksums.txt"
  algorithm: sha256

snapshot:
  name_template: "{{ .ProjectName }}_v{{ .Version }}"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

brews:
  -
    name: vultr-cli

    repository:
      owner: vultr
      name: homebrew-vultr-cli

    url_template: "https://github.com/vultr/vultr-cli/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    commit_author:
      name: goreleaserbot
      email: opensource@vultr.com

    homepage: "https://github.com/vultr/vultr-cli"

    description: "Official command-line tool for Vultr services"

    test: |
      output = shell_output("#{bin}/vultr-cli version 2>&1", 1)
      assert_match "Please export your VULTR API key as an environment variable or add `api-key` to your config file, eg:\nexport VULTR_API_KEY='<api_key_from_vultr_account>'\n", output

    install: |
      bin.install "vultr-cli"
      prefix.install_metafiles

dockers:
  - dockerfile: Dockerfile.goreleaser
    image_templates:
      - "vultr/vultr-cli:release"
      - "vultr/vultr-cli:latest"
      - "vultr/vultr-cli:{{ .Tag }}"
    extra_files:
      - scripts/entrypoint.sh

release:
  github:
    owner: vultr
    name: vultr-cli
